#!/usr/bin/env ruby

# Written for a buy-nothing group - picks a number from a range based on the
# number of people interested in an item.
#
# NB: This script really just wraps one Ruby function to choose a
# number from a range (inclusively). I wrote it as a script mostly
# because every time I had to use it, I forgot the syntax for an
# inclusive versus exclusive range, and I wanted to make sure that
# I don't leave people out at the beginning or end of the range.
#
# Install (Mac OS or Linux) by copying to a directory in your path like
# /usr/local/bin, and then make executable by entering:
#
# `chmod 755 /usr/local/bin/random-winner`
#
# Or, you could clone this repo and symlink from somewhere in your path.
#
# Execute like:
#
# random-winner 21
#
# Substitute 21 with the number of people interested in your item.
#
# Author: Justin Leitgeb
# License: MIT (see LICENSE file)

USAGE = "Call with number of parties interested in the item, e.g., random-winner 3."

def parse_interested_number(interested_number)
  Integer(ARGV[0])
rescue ArgumentError
  $stderr.puts "Error: First argument represents the number of parties interested and must be a number."
  $stderr.puts USAGE
  exit 1
end

if ARGV[0]
  num_interested = parse_interested_number(ARGV[0])
  puts "There are #{num_interested} people interested."
  winner = rand(1..num_interested)
  puts "**** The winner is number #{winner}. ****\n"
  puts "Results generated with the random-winner script, https://github.com/jsl/random-winner."
else
  puts USAGE
end
